/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyectofarmacia;

import java.awt.Image;
import java.awt.image.ImageProducer;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Joel Arriola
 */
public class Productos extends javax.swing.JPanel {

   Conexion conectar=new Conexion();
   Connection ConectarBd=conectar.getConection();    
     ResultSet rs;
    PreparedStatement Insertar=null;
    PreparedStatement Actualizar=null;
    PreparedStatement Eliminar=null;
    Statement st;
    @Override
    public Image createImage(ImageProducer producer) {
        return super.createImage(producer); //To change body of generated methods, choose Tools | Templates.
    }

    public Productos() {
        initComponents();
        ProductosVencerMes();

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fondo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        MenuVencer = new javax.swing.JComboBox<>();
        FechaDate = new com.toedter.calendar.JDateChooser();
        MenuVentas = new javax.swing.JComboBox<>();
        MenuCompras = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TotalTabletb = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        ProductosTable = new rojerusan.RSTableMetro();

        Fondo.setBackground(new java.awt.Color(207, 155, 188));
        Fondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(110, 207, 255));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MenuVencer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONSULTAR PRODUCTOS A VENCER", "POR MES", "POR AÑO", "POR FECHA", " " }));
        MenuVencer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuVencerActionPerformed(evt);
            }
        });
        jPanel1.add(MenuVencer, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, -1, 50));

        FechaDate.setDateFormatString("yyy-MM-dd");
        jPanel1.add(FechaDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 130, 50));

        MenuVentas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONSULTAS DE  VENTAS", "VER VENTAS DEL MES", "VER VENTAS DEL AÑO ", "VER VENTAS POR FECHA", " " }));
        MenuVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuVentasActionPerformed(evt);
            }
        });
        jPanel1.add(MenuVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 210, 50));

        MenuCompras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONSULTAR DE COMPRAS", "POR MES", "POR AÑO", "POR FECHA", " " }));
        MenuCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuComprasActionPerformed(evt);
            }
        });
        jPanel1.add(MenuCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, -1, 50));

        Fondo.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1240, 490));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PRODUCTOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 2, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        TotalTabletb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(TotalTabletb);

        ProductosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(ProductosTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(702, 702, 702)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(378, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Fondo.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 1240, 230));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_jPanel1MouseClicked

    private void MenuVencerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuVencerActionPerformed
        if(MenuVencer.getSelectedItem().equals("POR MES")){
            ProductosVencerMes();
            Limpiar();
            
        } if(MenuVencer.getSelectedItem().equals("POR AÑO")){
            ProductosVenceranio();
            Limpiar();
            
        }if(MenuVencer.getSelectedItem().equals("POR FECHA")){
            ProductosVencerFecha();
            Limpiar();
        }
    }//GEN-LAST:event_MenuVencerActionPerformed

    private void MenuVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuVentasActionPerformed
        if(MenuVentas.getSelectedItem().equals("VER VENTAS DEL MES")){
            VerDatallesdeVentasMes();
            VerTotalPagar();
        }if(MenuVentas.getSelectedItem().equals("VER VENTAS DEL AÑO ")){
            VerTotalPagarAmio();
            VerDatallesdeVentasAnio();
        }if(MenuVentas.getSelectedItem().equals("VER VENTAS POR FECHA")){
            VerDatallesdeVentasFecha();
            VerTotalPagarFecha();
        }
    }//GEN-LAST:event_MenuVentasActionPerformed

    private void MenuComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuComprasActionPerformed
        if(MenuCompras.getSelectedItem().equals("POR MES")){
            VerDatosComprasMes();
            VerTotalPagarComprasMes();
        }if(MenuCompras.getSelectedItem().equals("POR AÑO")){
            VerDatosComprasAnio();
            VerDatosComprasAnio();
        }if(MenuCompras.getSelectedItem().equals("POR FECHA")){
            VerDatallesdeVentasFecha();
            VerTotalPagarComprasFEcha();
        }
    }//GEN-LAST:event_MenuComprasActionPerformed

/*
public void ActualizarTipoLaboratorio(){
  
    
    try {
        Actualizar=ConectarBd.prepareStatement("update TipoLaboratorio set Nombre='' where idTipoLaboratorio='"+txtID.getText()+"'");
        int Contador=Actualizar.executeUpdate();
        if(Contador>0){
        JOptionPane.showMessageDialog(null,"Datos Actualizados");
        Mostrar();
        
    }else {
          JOptionPane.showMessageDialog(null,"No selecciono la fila");
    }
    
    } catch (Exception e) {
          JOptionPane.showMessageDialog(null,"error"+e.toString());
    }
}
*/

public void CargarDatosConbox(JComboBox marcas){
    DefaultComboBoxModel Datos=new DefaultComboBoxModel();
    
    marcas.setModel(Datos);
    String consulta="select NombreMarca\n" +
"from Marca";
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(consulta);
        while(rs.next()){
          marcas.addItem(rs.getString("NombreMarca"));
            
        }
    } catch (Exception e) {
    }
   
    
    
}
public void CargarDatosLaboratorios(JComboBox Laboratorio){
    DefaultComboBoxModel Labor=new DefaultComboBoxModel();
    Laboratorio.setModel(Labor);
    String consulta="SELECT Nombre from Laboratorio";
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(consulta);
        while(rs.next()){
            Laboratorio.addItem(rs.getString("Nombre"));
        }
    } catch (Exception e) {
    }
    
}
// todo metodos de mostrar productos a vencer 
public void ProductosVencerMes(){
    DefaultTableModel Modelo=new DefaultTableModel();
    Modelo.addColumn("codigo Producto");
    Modelo.addColumn("Nombre");
    Modelo.addColumn("Decripcion");
    Modelo.addColumn("Fecha Caducidad");
    Modelo.addColumn("Costo");
    Modelo.addColumn("Precio");
    Modelo.addColumn("Existencia");
    Modelo.addColumn("Nombre Marca");
    Modelo.addColumn("Laboratorio");
    
    int mes=Integer.parseInt(Mes());
    int mesCaducidad=1+mes;
    
    ProductosTable.setModel(Modelo);
    String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    String Consulta="select p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Costo,p.Precio,p.Existencia,m.NombreMarca,l.Nombre as Laboratorio\n" +
"from Productos p, Marca m, Laboratorio l \n" +
"where p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio and MONTH(p.FechaCaducidad)='"+mesCaducidad+"'";
    
    String Dato[]=new String[9];
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Dato[1]=rs.getString(2);
            Dato[2]=rs.getString(3);
            Dato[3]=rs.getString(4);
            Dato[4]=rs.getString(5);
            Dato[5]=rs.getString(6);
            Dato[6]=rs.getString(7);
            Dato[7]=rs.getString(8);
            Dato[8]=rs.getString(9);
            Modelo.addRow(Dato);
            
        }
    } catch (Exception e) {
    }
}

public void ProductosVenceranio(){
    DefaultTableModel Modelo=new DefaultTableModel();
    Modelo.addColumn("codigo Producto");
    Modelo.addColumn("Nombre");
    Modelo.addColumn("Decripcion");
    Modelo.addColumn("Fecha Caducidad");
    Modelo.addColumn("Costo");
    Modelo.addColumn("Precio");
    Modelo.addColumn("Existencia");
    Modelo.addColumn("Nombre Marca");
    Modelo.addColumn("Laboratorio");
    
    
    ProductosTable.setModel(Modelo);
    String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    String Consulta="select p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Costo,p.Precio,p.Existencia,m.NombreMarca,l.Nombre as Laboratorio\n" +
"from Productos p, Marca m, Laboratorio l \n" +
"where p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio and year(p.FechaCaducidad)='"+FechaA+"'";
    
    String Dato[]=new String[9];
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Dato[1]=rs.getString(2);
            Dato[2]=rs.getString(3);
            Dato[3]=rs.getString(4);
            Dato[4]=rs.getString(5);
            Dato[5]=rs.getString(6);
            Dato[6]=rs.getString(7);
            Dato[7]=rs.getString(8);
            Dato[8]=rs.getString(9);
            Modelo.addRow(Dato);
            
        }
    } catch (Exception e) {
    }
}

public void ProductosVencerFecha(){
    DefaultTableModel Modelo=new DefaultTableModel();
    Modelo.addColumn("codigo Producto");
    Modelo.addColumn("Nombre");
    Modelo.addColumn("Decripcion");
    Modelo.addColumn("Fecha Caducidad");
    Modelo.addColumn("Costo");
    Modelo.addColumn("Precio");
    Modelo.addColumn("Existencia");
    Modelo.addColumn("Nombre Marca");
    Modelo.addColumn("Laboratorio");
    
    
    ProductosTable.setModel(Modelo);
    String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    String Consulta="select p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Costo,p.Precio,p.Existencia,m.NombreMarca,l.Nombre as Laboratorio\n" +
"from Productos p, Marca m, Laboratorio l \n" +
"where p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio and p.FechaCaducidad='"+FechaA+"'";
    
    String Dato[]=new String[9];
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Dato[1]=rs.getString(2);
            Dato[2]=rs.getString(3);
            Dato[3]=rs.getString(4);
            Dato[4]=rs.getString(5);
            Dato[5]=rs.getString(6);
            Dato[6]=rs.getString(7);
            Dato[7]=rs.getString(8);
            Dato[8]=rs.getString(9);
            Modelo.addRow(Dato);
            
        }
    } catch (Exception e) {
    }
}

    public void VerDatallesdeVentasMes(){
        String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
        DefaultTableModel Modelo=new DefaultTableModel();
        Modelo.addColumn("Codigo VentaDetalle");
        Modelo.addColumn("CD Cliente");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Nit");
        Modelo.addColumn("Telefono");
        Modelo.addColumn("Codigo Ventas");
        Modelo.addColumn("Fecha");
        Modelo.addColumn("Precio ");
        Modelo.addColumn("Cantidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Marca");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Pago");
        Modelo.addColumn("Total ");
        ProductosTable.setModel(Modelo);
        String Datos[]=new String[19];
        String Consulta="Select dv.idDetalleVenta, c.idClientes,c.Nombre,c.Nit,c.Telefono,v.idVentas,v.fecha,dv.precio,dv.cantidad,dv.costoTotal,\n" +
"p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago,sum(dv.cantidad*dv.precio)as Total\n" +
"from DetalleVenta dv, Ventas v,Productos p, formaPago fp, Clientes c, Laboratorio l , Marca m\n" +
"where dv.idVentas=v.idVentas and dv.idProductos=p.idProductos and v.idClientes=c.idClientes and c.idFormaPago=fp.idFormaPago\n" +
"and p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio  and MONTH(v.fecha)='"+FechaA+"'\n" +
"group by  dv.idDetalleVenta, c.idClientes,c.Nombre,c.Nit,c.Telefono,v.idVentas,v.fecha,dv.precio,dv.cantidad,dv.costoTotal,\n" +
"p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago";
        try {
            st=ConectarBd.createStatement();
            rs=st.executeQuery(Consulta);
            while(rs.next()){
            Datos[0]=rs.getString(1);
            Datos[1]=rs.getString(2);
            Datos[2]=rs.getString(3);
            Datos[3]=rs.getString(4);
            Datos[4]=rs.getString(5);
            Datos[5]=rs.getString(6);
            Datos[6]=rs.getString(7);
            Datos[7]=rs.getString(8);
            Datos[8]=rs.getString(9);
            Datos[9]=rs.getString(10);
            Datos[10]=rs.getString(11);
            Datos[11]=rs.getString(12);
            Datos[12]=rs.getString(13);
            Datos[13]=rs.getString(14);
            Datos[14]=rs.getString(15);
            Datos[15]=rs.getString(16);
            Datos[16]=rs.getString(17);
            Datos[17]=rs.getString(18);
            Datos[18]=rs.getString(19);
           
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error"+ e.toString());
        }
        
    }
 public void VerDatallesdeVentasAnio(){
        String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
        DefaultTableModel Modelo=new DefaultTableModel();
        Modelo.addColumn("Codigo VentaDetalle");
        Modelo.addColumn("CD Cliente");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Nit");
        Modelo.addColumn("Telefono");
        Modelo.addColumn("Codigo Ventas");
        Modelo.addColumn("Fecha");
        Modelo.addColumn("Precio ");
        Modelo.addColumn("Cantidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Marca");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Pago");
        Modelo.addColumn("Total ");
        ProductosTable.setModel(Modelo);
        String Datos[]=new String[19];
        String Consulta="Select dv.idDetalleVenta, c.idClientes,c.Nombre,c.Nit,c.Telefono,v.idVentas,v.fecha,dv.precio,dv.cantidad,dv.costoTotal,\n" +
"p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago,sum(dv.cantidad*dv.precio)as Total\n" +
"from DetalleVenta dv, Ventas v,Productos p, formaPago fp, Clientes c, Laboratorio l , Marca m\n" +
"where dv.idVentas=v.idVentas and dv.idProductos=p.idProductos and v.idClientes=c.idClientes and c.idFormaPago=fp.idFormaPago\n" +
"and p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio  and year(v.fecha)='"+FechaA+"'\n" +
"group by  dv.idDetalleVenta, c.idClientes,c.Nombre,c.Nit,c.Telefono,v.idVentas,v.fecha,dv.precio,dv.cantidad,dv.costoTotal,\n" +
"p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago";
        try {
            st=ConectarBd.createStatement();
            rs=st.executeQuery(Consulta);
            while(rs.next()){
            Datos[0]=rs.getString(1);
            Datos[1]=rs.getString(2);
            Datos[2]=rs.getString(3);
            Datos[3]=rs.getString(4);
            Datos[4]=rs.getString(5);
            Datos[5]=rs.getString(6);
            Datos[6]=rs.getString(7);
            Datos[7]=rs.getString(8);
            Datos[8]=rs.getString(9);
            Datos[9]=rs.getString(10);
            Datos[10]=rs.getString(11);
            Datos[11]=rs.getString(12);
            Datos[12]=rs.getString(13);
            Datos[13]=rs.getString(14);
            Datos[14]=rs.getString(15);
            Datos[15]=rs.getString(16);
            Datos[16]=rs.getString(17);
            Datos[17]=rs.getString(18);
            Datos[18]=rs.getString(19);
           
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error"+ e.toString());
        }
        
    }
 public void VerDatallesdeVentasFecha(){
        String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
        DefaultTableModel Modelo=new DefaultTableModel();
        Modelo.addColumn("Codigo VentaDetalle");
        Modelo.addColumn("CD Cliente");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Nit");
        Modelo.addColumn("Telefono");
        Modelo.addColumn("Codigo Ventas");
        Modelo.addColumn("Fecha");
        Modelo.addColumn("Precio ");
        Modelo.addColumn("Cantidad");
        Modelo.addColumn("Costo");
        Modelo.addColumn("Codigo Producto");
        Modelo.addColumn("Nombre");
        Modelo.addColumn("Descripcion");
        Modelo.addColumn("Fecha Caducidad");
        Modelo.addColumn("Existencia");
        Modelo.addColumn("Marca");
        Modelo.addColumn("Laboratorio");
        Modelo.addColumn("Pago");
        Modelo.addColumn("Total ");
        ProductosTable.setModel(Modelo);
        String Datos[]=new String[19];
        String Consulta="Select dv.idDetalleVenta, c.idClientes,c.Nombre,c.Nit,c.Telefono,v.idVentas,v.fecha,dv.precio,dv.cantidad,dv.costoTotal,\n" +
"p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago,sum(dv.cantidad*dv.precio)as Total\n" +
"from DetalleVenta dv, Ventas v,Productos p, formaPago fp, Clientes c, Laboratorio l , Marca m\n" +
"where dv.idVentas=v.idVentas and dv.idProductos=p.idProductos and v.idClientes=c.idClientes and c.idFormaPago=fp.idFormaPago\n" +
"and p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio  and v.fecha='"+FechaA+"'\n" +
"group by  dv.idDetalleVenta, c.idClientes,c.Nombre,c.Nit,c.Telefono,v.idVentas,v.fecha,dv.precio,dv.cantidad,dv.costoTotal,\n" +
"p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago";
        try {
            st=ConectarBd.createStatement();
            rs=st.executeQuery(Consulta);
            while(rs.next()){
            Datos[0]=rs.getString(1);
            Datos[1]=rs.getString(2);
            Datos[2]=rs.getString(3);
            Datos[3]=rs.getString(4);
            Datos[4]=rs.getString(5);
            Datos[5]=rs.getString(6);
            Datos[6]=rs.getString(7);
            Datos[7]=rs.getString(8);
            Datos[8]=rs.getString(9);
            Datos[9]=rs.getString(10);
            Datos[10]=rs.getString(11);
            Datos[11]=rs.getString(12);
            Datos[12]=rs.getString(13);
            Datos[13]=rs.getString(14);
            Datos[14]=rs.getString(15);
            Datos[15]=rs.getString(16);
            Datos[16]=rs.getString(17);
            Datos[17]=rs.getString(18);
            Datos[18]=rs.getString(19);
           
                Modelo.addRow(Datos);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error"+ e.toString());
        }
        
    }

public void VerTotalPagar(){
    DefaultTableModel Modelo=new DefaultTableModel();
     String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    Modelo.addColumn("Total");
    TotalTabletb.setModel(Modelo);
    String Consulta="select sum(dv.precio*dv.cantidad)as TotalAPagar \n" +
"from DetalleVenta dv , Ventas v\n" +
"where dv.idVentas=v.idVentas and MONTH(v.Fecha)='"+FechaA+"'";
    String Dato[]=new String[1];
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Modelo.addRow(Dato);
        }
    } catch (Exception e) {
       
    }
    
}  

public void VerTotalPagarAmio(){
    DefaultTableModel Modelo=new DefaultTableModel();
   String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    Modelo.addColumn("Total");
    TotalTabletb.setModel(Modelo);
    String Consulta="select sum(dv.precio*dv.cantidad)as TotalAPagar \n" +
"from DetalleVenta dv , Ventas v\n" +
"where dv.idVentas=v.idVentas and year(v.Fecha)='"+FechaA+"'";
    String Dato[]=new String[1];
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Modelo.addRow(Dato);
        }
    } catch (Exception e) {
       
    }
    
}  
public void VerTotalPagarFecha(){
    DefaultTableModel Modelo=new DefaultTableModel();
     String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    Modelo.addColumn("Total");
    TotalTabletb.setModel(Modelo);
    String Consulta="select sum(dv.precio*dv.cantidad)as TotalAPagar \n" +
"from DetalleVenta dv , Ventas v\n" +
"where dv.idVentas=v.idVentas and v.Fecha='"+FechaA+"'";
    String Dato[]=new String[1];
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Modelo.addRow(Dato);
        }
    } catch (Exception e) {
       
    }
    
}  
public void Limpiar(){
    DefaultTableModel Modelo=new DefaultTableModel();
   
    Modelo.addColumn("Total");
    TotalTabletb.setModel(Modelo);
    
    
 
     
}

    public void VerDatosComprasMes(){
    DefaultTableModel Modelo=new DefaultTableModel();
    String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    Modelo.addColumn("idCompraDetalle");
    Modelo.addColumn("Codigo Proveedor");
    Modelo.addColumn("Nombre");
    Modelo.addColumn("Nit");
    Modelo.addColumn("Telefono");
    Modelo.addColumn("Precio");
    Modelo.addColumn("Cantidad");
    Modelo.addColumn("costoTotal");
    Modelo.addColumn("Codigo Compra");
    Modelo.addColumn("Fecha");
    Modelo.addColumn("CodigoProducto");
    Modelo.addColumn("Nombre");
    Modelo.addColumn("Descripcion");
    Modelo.addColumn("Fecha Caducidad");
    Modelo.addColumn("Costo");
    Modelo.addColumn("Precio");
    Modelo.addColumn("Existencia");
    Modelo.addColumn("Marca");
    Modelo.addColumn("Laboratorio");
    Modelo.addColumn("Pago");
    ProductosTable.setModel(Modelo);
    
    String Consulta="select cd.idCompraDetalle,pr.idProveedores,pr.Nombre,pr.Nit,pr.Telefono,cd.precio,cd.cantidad,cd.costoTotal,c.idCompras,c.Fecha,p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Costo,p.Precio,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago\n" +
"from CompraDetalle cd, Compras c, Productos p, Proveedor pr, Marca m, Laboratorio l,formaPago fp\n" +
"where cd.idCompras=c.idCompras and cd.idProductos=p.idProductos  and c.idProveedores=pr.idProveedores and p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio\n" +
"and fp.idFormaPago=pr.idFormaPago and MONTH(c.Fecha)='"+FechaA+"'";
    
    String Datos[] = new String[20];
    
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        
        while(rs.next()){
            Datos[0]=rs.getString(1);
            Datos[1]=rs.getString(2);
            Datos[2]=rs.getString(3);
            Datos[3]=rs.getString(4);
            Datos[4]=rs.getString(5);
            Datos[5]=rs.getString(6);
            Datos[6]=rs.getString(7);
            Datos[7]=rs.getString(8);
            Datos[8]=rs.getString(9);
            Datos[9]=rs.getString(10);
            Datos[10]=rs.getString(11);
            Datos[11]=rs.getString(12);
            Datos[12]=rs.getString(13);
            Datos[13]=rs.getString(14);
            Datos[14]=rs.getString(15);
            Datos[15]=rs.getString(16);
            Datos[16]=rs.getString(17);
            Datos[17]=rs.getString(18);
            Datos[18]=rs.getString(19);
            Datos[19]=rs.getString(20);
        
            Modelo.addRow(Datos);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null,"Erro "+ e.toString());
    }
    
    
}
  

    public void VerDatosComprasAnio(){
    DefaultTableModel Modelo=new DefaultTableModel();
    String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    Modelo.addColumn("idCompraDetalle");
    Modelo.addColumn("Codigo Proveedor");
    Modelo.addColumn("Nombre");
    Modelo.addColumn("Nit");
    Modelo.addColumn("Telefono");
    Modelo.addColumn("Precio");
    Modelo.addColumn("Cantidad");
    Modelo.addColumn("costoTotal");
    Modelo.addColumn("Codigo Compra");
    Modelo.addColumn("Fecha");
    Modelo.addColumn("CodigoProducto");
    Modelo.addColumn("Nombre");
    Modelo.addColumn("Descripcion");
    Modelo.addColumn("Fecha Caducidad");
    Modelo.addColumn("Costo");
    Modelo.addColumn("Precio");
    Modelo.addColumn("Existencia");
    Modelo.addColumn("Marca");
    Modelo.addColumn("Laboratorio");
    Modelo.addColumn("Pago");
    ProductosTable.setModel(Modelo);
    
    String Consulta="select cd.idCompraDetalle,pr.idProveedores,pr.Nombre,pr.Nit,pr.Telefono,cd.precio,cd.cantidad,cd.costoTotal,c.idCompras,c.Fecha,p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Costo,p.Precio,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago\n" +
"from CompraDetalle cd, Compras c, Productos p, Proveedor pr, Marca m, Laboratorio l,formaPago fp\n" +
"where cd.idCompras=c.idCompras and cd.idProductos=p.idProductos  and c.idProveedores=pr.idProveedores and p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio\n" +
"and fp.idFormaPago=pr.idFormaPago and year(c.Fecha)='"+FechaA+"'";
    
    String Datos[] = new String[20];
    
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        
        while(rs.next()){
            Datos[0]=rs.getString(1);
            Datos[1]=rs.getString(2);
            Datos[2]=rs.getString(3);
            Datos[3]=rs.getString(4);
            Datos[4]=rs.getString(5);
            Datos[5]=rs.getString(6);
            Datos[6]=rs.getString(7);
            Datos[7]=rs.getString(8);
            Datos[8]=rs.getString(9);
            Datos[9]=rs.getString(10);
            Datos[10]=rs.getString(11);
            Datos[11]=rs.getString(12);
            Datos[12]=rs.getString(13);
            Datos[13]=rs.getString(14);
            Datos[14]=rs.getString(15);
            Datos[15]=rs.getString(16);
            Datos[16]=rs.getString(17);
            Datos[17]=rs.getString(18);
            Datos[18]=rs.getString(19);
            Datos[19]=rs.getString(20);
        
            Modelo.addRow(Datos);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null,"Erro "+ e.toString());
    }
    
    
}
     public void VerDatosComprasFecha(){
    DefaultTableModel Modelo=new DefaultTableModel();
    String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    Modelo.addColumn("idCompraDetalle");
    Modelo.addColumn("Codigo Proveedor");
    Modelo.addColumn("Nombre");
    Modelo.addColumn("Nit");
    Modelo.addColumn("Telefono");
    Modelo.addColumn("Precio");
    Modelo.addColumn("Cantidad");
    Modelo.addColumn("costoTotal");
    Modelo.addColumn("Codigo Compra");
    Modelo.addColumn("Fecha");
    Modelo.addColumn("CodigoProducto");
    Modelo.addColumn("Nombre");
    Modelo.addColumn("Descripcion");
    Modelo.addColumn("Fecha Caducidad");
    Modelo.addColumn("Costo");
    Modelo.addColumn("Precio");
    Modelo.addColumn("Existencia");
    Modelo.addColumn("Marca");
    Modelo.addColumn("Laboratorio");
    Modelo.addColumn("Pago");
    ProductosTable.setModel(Modelo);
    
    String Consulta="select cd.idCompraDetalle,pr.idProveedores,pr.Nombre,pr.Nit,pr.Telefono,cd.precio,cd.cantidad,cd.costoTotal,c.idCompras,c.Fecha,p.idProductos,p.Nombre,p.Descripcion,p.FechaCaducidad,p.Costo,p.Precio,p.Existencia,m.NombreMarca,l.Nombre,fp.TipoPago\n" +
"from CompraDetalle cd, Compras c, Productos p, Proveedor pr, Marca m, Laboratorio l,formaPago fp\n" +
"where cd.idCompras=c.idCompras and cd.idProductos=p.idProductos  and c.idProveedores=pr.idProveedores and p.idMarca=m.idMarca and p.idLaboratorio=l.idLaboratorio\n" +
"and fp.idFormaPago=pr.idFormaPago and c.Fecha='"+FechaA+"'";
    
    String Datos[] = new String[20];
    
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        
        while(rs.next()){
            Datos[0]=rs.getString(1);
            Datos[1]=rs.getString(2);
            Datos[2]=rs.getString(3);
            Datos[3]=rs.getString(4);
            Datos[4]=rs.getString(5);
            Datos[5]=rs.getString(6);
            Datos[6]=rs.getString(7);
            Datos[7]=rs.getString(8);
            Datos[8]=rs.getString(9);
            Datos[9]=rs.getString(10);
            Datos[10]=rs.getString(11);
            Datos[11]=rs.getString(12);
            Datos[12]=rs.getString(13);
            Datos[13]=rs.getString(14);
            Datos[14]=rs.getString(15);
            Datos[15]=rs.getString(16);
            Datos[16]=rs.getString(17);
            Datos[17]=rs.getString(18);
            Datos[18]=rs.getString(19);
            Datos[19]=rs.getString(20);
        
            Modelo.addRow(Datos);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null,"Erro "+ e.toString());
    }
    
    
}
  
public void VerTotalPagarComprasMes(){
    DefaultTableModel Modelo=new DefaultTableModel();
     String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    Modelo.addColumn("Total");
    TotalTabletb.setModel(Modelo);
    String Consulta="select sum(cd.costoTotal) from CompraDetalle cd, Compras c where MONTH(c.Fecha)='"+FechaA+"'";
    String Dato[]=new String[1];
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Modelo.addRow(Dato);
        }
    } catch (Exception e) {
       
    }
    
} 
public void VerTotalPagarComprasAnio(){
    DefaultTableModel Modelo=new DefaultTableModel();
     String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    Modelo.addColumn("Total");
    TotalTabletb.setModel(Modelo);
    String Consulta="select sum(cd.costoTotal) from CompraDetalle cd, Compras c where YEAR(c.Fecha)='"+FechaA+"'";
    String Dato[]=new String[1];
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Modelo.addRow(Dato);
        }
    } catch (Exception e) {
       
    }
    
} 
public String Mes(){
    Date mes=new Date();
    SimpleDateFormat mesCaducidad=new SimpleDateFormat("M");
    return mesCaducidad.format(mes);
}

public void VerTotalPagarComprasFEcha(){
    DefaultTableModel Modelo=new DefaultTableModel();
     String FechaA=((JTextField)FechaDate.getDateEditor().getUiComponent()).getText();
    Modelo.addColumn("Total");
    TotalTabletb.setModel(Modelo);
    String Consulta="select sum(cd.costoTotal) from CompraDetalle cd, Compras c where c.Fecha='"+FechaA+"'";
    String Dato[]=new String[1];
    try {
        st=ConectarBd.createStatement();
        rs=st.executeQuery(Consulta);
        while(rs.next()){
            Dato[0]=rs.getString(1);
            Modelo.addRow(Dato);
        }
    } catch (Exception e) {
       
    }
    
} 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser FechaDate;
    private javax.swing.JPanel Fondo;
    private javax.swing.JComboBox<String> MenuCompras;
    private javax.swing.JComboBox<String> MenuVencer;
    private javax.swing.JComboBox<String> MenuVentas;
    private rojerusan.RSTableMetro ProductosTable;
    private javax.swing.JTable TotalTabletb;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
